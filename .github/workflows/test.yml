# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request.
on:
  pull_request:
    branches:
      - main

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running tests
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0
          args: --tests=false

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      # We need the latest version of Terraform for our documentation generation to use
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - uses: arduino/setup-task@v2.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: task generate
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'task generate' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
#    strategy:
#      fail-fast: false
#      matrix:
#        # list whatever Terraform versions here you would like to support
#        terraform:
#          - '1.8.*'
#          - '1.9.*'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.9.x' # '${{ matrix.terraform }}
          terraform_wrapper: false
      - uses: arduino/setup-task@v2.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: go mod download
      - run: task testacc
        timeout-minutes: 10
