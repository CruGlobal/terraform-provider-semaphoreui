// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetWsReader is a Reader for the GetWs structure.
type GetWsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetWsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /ws] GetWs", response, response.Code())
	}
}

// NewGetWsOK creates a GetWsOK with default headers values
func NewGetWsOK() *GetWsOK {
	return &GetWsOK{}
}

/*
GetWsOK describes a response with status code 200, with default header values.

OK
*/
type GetWsOK struct {
}

// IsSuccess returns true when this get ws o k response has a 2xx status code
func (o *GetWsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get ws o k response has a 3xx status code
func (o *GetWsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ws o k response has a 4xx status code
func (o *GetWsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ws o k response has a 5xx status code
func (o *GetWsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get ws o k response a status code equal to that given
func (o *GetWsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get ws o k response
func (o *GetWsOK) Code() int {
	return 200
}

func (o *GetWsOK) Error() string {
	return fmt.Sprintf("[GET /ws][%d] getWsOK", 200)
}

func (o *GetWsOK) String() string {
	return fmt.Sprintf("[GET /ws][%d] getWsOK", 200)
}

func (o *GetWsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWsUnauthorized creates a GetWsUnauthorized with default headers values
func NewGetWsUnauthorized() *GetWsUnauthorized {
	return &GetWsUnauthorized{}
}

/*
GetWsUnauthorized describes a response with status code 401, with default header values.

not authenticated
*/
type GetWsUnauthorized struct {
}

// IsSuccess returns true when this get ws unauthorized response has a 2xx status code
func (o *GetWsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ws unauthorized response has a 3xx status code
func (o *GetWsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ws unauthorized response has a 4xx status code
func (o *GetWsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ws unauthorized response has a 5xx status code
func (o *GetWsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get ws unauthorized response a status code equal to that given
func (o *GetWsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get ws unauthorized response
func (o *GetWsUnauthorized) Code() int {
	return 401
}

func (o *GetWsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /ws][%d] getWsUnauthorized", 401)
}

func (o *GetWsUnauthorized) String() string {
	return fmt.Sprintf("[GET /ws][%d] getWsUnauthorized", 401)
}

func (o *GetWsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
