// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetProjectProjectIDRoleReader is a Reader for the GetProjectProjectIDRole structure.
type GetProjectProjectIDRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjectProjectIDRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjectProjectIDRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[GET /project/{project_id}/role] GetProjectProjectIDRole", response, response.Code())
	}
}

// NewGetProjectProjectIDRoleOK creates a GetProjectProjectIDRoleOK with default headers values
func NewGetProjectProjectIDRoleOK() *GetProjectProjectIDRoleOK {
	return &GetProjectProjectIDRoleOK{}
}

/*
GetProjectProjectIDRoleOK describes a response with status code 200, with default header values.

Permissions
*/
type GetProjectProjectIDRoleOK struct {
	Payload *GetProjectProjectIDRoleOKBody
}

// IsSuccess returns true when this get project project Id role o k response has a 2xx status code
func (o *GetProjectProjectIDRoleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get project project Id role o k response has a 3xx status code
func (o *GetProjectProjectIDRoleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project project Id role o k response has a 4xx status code
func (o *GetProjectProjectIDRoleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get project project Id role o k response has a 5xx status code
func (o *GetProjectProjectIDRoleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get project project Id role o k response a status code equal to that given
func (o *GetProjectProjectIDRoleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get project project Id role o k response
func (o *GetProjectProjectIDRoleOK) Code() int {
	return 200
}

func (o *GetProjectProjectIDRoleOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /project/{project_id}/role][%d] getProjectProjectIdRoleOK %s", 200, payload)
}

func (o *GetProjectProjectIDRoleOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /project/{project_id}/role][%d] getProjectProjectIdRoleOK %s", 200, payload)
}

func (o *GetProjectProjectIDRoleOK) GetPayload() *GetProjectProjectIDRoleOKBody {
	return o.Payload
}

func (o *GetProjectProjectIDRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetProjectProjectIDRoleOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetProjectProjectIDRoleOKBody get project project ID role o k body
swagger:model GetProjectProjectIDRoleOKBody
*/
type GetProjectProjectIDRoleOKBody struct {

	// permissions
	// Example: 0
	Permissions float64 `json:"permissions,omitempty"`

	// role
	// Example: owner
	Role string `json:"role,omitempty"`
}

// Validate validates this get project project ID role o k body
func (o *GetProjectProjectIDRoleOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get project project ID role o k body based on context it is used
func (o *GetProjectProjectIDRoleOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetProjectProjectIDRoleOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetProjectProjectIDRoleOKBody) UnmarshalBinary(b []byte) error {
	var res GetProjectProjectIDRoleOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
