// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"terraform-provider-semaphoreui/semaphoreui/models"
)

// NewPostProjectProjectIDEnvironmentParams creates a new PostProjectProjectIDEnvironmentParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostProjectProjectIDEnvironmentParams() *PostProjectProjectIDEnvironmentParams {
	return &PostProjectProjectIDEnvironmentParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostProjectProjectIDEnvironmentParamsWithTimeout creates a new PostProjectProjectIDEnvironmentParams object
// with the ability to set a timeout on a request.
func NewPostProjectProjectIDEnvironmentParamsWithTimeout(timeout time.Duration) *PostProjectProjectIDEnvironmentParams {
	return &PostProjectProjectIDEnvironmentParams{
		timeout: timeout,
	}
}

// NewPostProjectProjectIDEnvironmentParamsWithContext creates a new PostProjectProjectIDEnvironmentParams object
// with the ability to set a context for a request.
func NewPostProjectProjectIDEnvironmentParamsWithContext(ctx context.Context) *PostProjectProjectIDEnvironmentParams {
	return &PostProjectProjectIDEnvironmentParams{
		Context: ctx,
	}
}

// NewPostProjectProjectIDEnvironmentParamsWithHTTPClient creates a new PostProjectProjectIDEnvironmentParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostProjectProjectIDEnvironmentParamsWithHTTPClient(client *http.Client) *PostProjectProjectIDEnvironmentParams {
	return &PostProjectProjectIDEnvironmentParams{
		HTTPClient: client,
	}
}

/*
PostProjectProjectIDEnvironmentParams contains all the parameters to send to the API endpoint

	for the post project project ID environment operation.

	Typically these are written to a http.Request.
*/
type PostProjectProjectIDEnvironmentParams struct {

	// Environment.
	Environment *models.EnvironmentRequest

	/* ProjectID.

	   Project ID
	*/
	ProjectID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post project project ID environment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostProjectProjectIDEnvironmentParams) WithDefaults() *PostProjectProjectIDEnvironmentParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post project project ID environment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostProjectProjectIDEnvironmentParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post project project ID environment params
func (o *PostProjectProjectIDEnvironmentParams) WithTimeout(timeout time.Duration) *PostProjectProjectIDEnvironmentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post project project ID environment params
func (o *PostProjectProjectIDEnvironmentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post project project ID environment params
func (o *PostProjectProjectIDEnvironmentParams) WithContext(ctx context.Context) *PostProjectProjectIDEnvironmentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post project project ID environment params
func (o *PostProjectProjectIDEnvironmentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post project project ID environment params
func (o *PostProjectProjectIDEnvironmentParams) WithHTTPClient(client *http.Client) *PostProjectProjectIDEnvironmentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post project project ID environment params
func (o *PostProjectProjectIDEnvironmentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnvironment adds the environment to the post project project ID environment params
func (o *PostProjectProjectIDEnvironmentParams) WithEnvironment(environment *models.EnvironmentRequest) *PostProjectProjectIDEnvironmentParams {
	o.SetEnvironment(environment)
	return o
}

// SetEnvironment adds the environment to the post project project ID environment params
func (o *PostProjectProjectIDEnvironmentParams) SetEnvironment(environment *models.EnvironmentRequest) {
	o.Environment = environment
}

// WithProjectID adds the projectID to the post project project ID environment params
func (o *PostProjectProjectIDEnvironmentParams) WithProjectID(projectID int64) *PostProjectProjectIDEnvironmentParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the post project project ID environment params
func (o *PostProjectProjectIDEnvironmentParams) SetProjectID(projectID int64) {
	o.ProjectID = projectID
}

// WriteToRequest writes these params to a swagger request
func (o *PostProjectProjectIDEnvironmentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Environment != nil {
		if err := r.SetBodyParam(o.Environment); err != nil {
			return err
		}
	}

	// path param project_id
	if err := r.SetPathParam("project_id", swag.FormatInt64(o.ProjectID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
