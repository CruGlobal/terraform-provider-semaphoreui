// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"terraform-provider-semaphoreui/semaphoreui/models"
)

// NewPostProjectProjectIDIntegrationsIntegrationIDMatchersParams creates a new PostProjectProjectIDIntegrationsIntegrationIDMatchersParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostProjectProjectIDIntegrationsIntegrationIDMatchersParams() *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams {
	return &PostProjectProjectIDIntegrationsIntegrationIDMatchersParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostProjectProjectIDIntegrationsIntegrationIDMatchersParamsWithTimeout creates a new PostProjectProjectIDIntegrationsIntegrationIDMatchersParams object
// with the ability to set a timeout on a request.
func NewPostProjectProjectIDIntegrationsIntegrationIDMatchersParamsWithTimeout(timeout time.Duration) *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams {
	return &PostProjectProjectIDIntegrationsIntegrationIDMatchersParams{
		timeout: timeout,
	}
}

// NewPostProjectProjectIDIntegrationsIntegrationIDMatchersParamsWithContext creates a new PostProjectProjectIDIntegrationsIntegrationIDMatchersParams object
// with the ability to set a context for a request.
func NewPostProjectProjectIDIntegrationsIntegrationIDMatchersParamsWithContext(ctx context.Context) *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams {
	return &PostProjectProjectIDIntegrationsIntegrationIDMatchersParams{
		Context: ctx,
	}
}

// NewPostProjectProjectIDIntegrationsIntegrationIDMatchersParamsWithHTTPClient creates a new PostProjectProjectIDIntegrationsIntegrationIDMatchersParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostProjectProjectIDIntegrationsIntegrationIDMatchersParamsWithHTTPClient(client *http.Client) *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams {
	return &PostProjectProjectIDIntegrationsIntegrationIDMatchersParams{
		HTTPClient: client,
	}
}

/*
PostProjectProjectIDIntegrationsIntegrationIDMatchersParams contains all the parameters to send to the API endpoint

	for the post project project ID integrations integration ID matchers operation.

	Typically these are written to a http.Request.
*/
type PostProjectProjectIDIntegrationsIntegrationIDMatchersParams struct {

	// IntegrationMatcher.
	IntegrationMatcher *models.IntegrationMatcher

	/* IntegrationID.

	   integration ID
	*/
	IntegrationID int64

	/* ProjectID.

	   Project ID
	*/
	ProjectID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post project project ID integrations integration ID matchers params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams) WithDefaults() *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post project project ID integrations integration ID matchers params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post project project ID integrations integration ID matchers params
func (o *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams) WithTimeout(timeout time.Duration) *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post project project ID integrations integration ID matchers params
func (o *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post project project ID integrations integration ID matchers params
func (o *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams) WithContext(ctx context.Context) *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post project project ID integrations integration ID matchers params
func (o *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post project project ID integrations integration ID matchers params
func (o *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams) WithHTTPClient(client *http.Client) *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post project project ID integrations integration ID matchers params
func (o *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIntegrationMatcher adds the integrationMatcher to the post project project ID integrations integration ID matchers params
func (o *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams) WithIntegrationMatcher(integrationMatcher *models.IntegrationMatcher) *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams {
	o.SetIntegrationMatcher(integrationMatcher)
	return o
}

// SetIntegrationMatcher adds the integrationMatcher to the post project project ID integrations integration ID matchers params
func (o *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams) SetIntegrationMatcher(integrationMatcher *models.IntegrationMatcher) {
	o.IntegrationMatcher = integrationMatcher
}

// WithIntegrationID adds the integrationID to the post project project ID integrations integration ID matchers params
func (o *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams) WithIntegrationID(integrationID int64) *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams {
	o.SetIntegrationID(integrationID)
	return o
}

// SetIntegrationID adds the integrationId to the post project project ID integrations integration ID matchers params
func (o *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams) SetIntegrationID(integrationID int64) {
	o.IntegrationID = integrationID
}

// WithProjectID adds the projectID to the post project project ID integrations integration ID matchers params
func (o *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams) WithProjectID(projectID int64) *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the post project project ID integrations integration ID matchers params
func (o *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams) SetProjectID(projectID int64) {
	o.ProjectID = projectID
}

// WriteToRequest writes these params to a swagger request
func (o *PostProjectProjectIDIntegrationsIntegrationIDMatchersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.IntegrationMatcher != nil {
		if err := r.SetBodyParam(o.IntegrationMatcher); err != nil {
			return err
		}
	}

	// path param integration_id
	if err := r.SetPathParam("integration_id", swag.FormatInt64(o.IntegrationID)); err != nil {
		return err
	}

	// path param project_id
	if err := r.SetPathParam("project_id", swag.FormatInt64(o.ProjectID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
