// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostProjectProjectIDTasksParams creates a new PostProjectProjectIDTasksParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostProjectProjectIDTasksParams() *PostProjectProjectIDTasksParams {
	return &PostProjectProjectIDTasksParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostProjectProjectIDTasksParamsWithTimeout creates a new PostProjectProjectIDTasksParams object
// with the ability to set a timeout on a request.
func NewPostProjectProjectIDTasksParamsWithTimeout(timeout time.Duration) *PostProjectProjectIDTasksParams {
	return &PostProjectProjectIDTasksParams{
		timeout: timeout,
	}
}

// NewPostProjectProjectIDTasksParamsWithContext creates a new PostProjectProjectIDTasksParams object
// with the ability to set a context for a request.
func NewPostProjectProjectIDTasksParamsWithContext(ctx context.Context) *PostProjectProjectIDTasksParams {
	return &PostProjectProjectIDTasksParams{
		Context: ctx,
	}
}

// NewPostProjectProjectIDTasksParamsWithHTTPClient creates a new PostProjectProjectIDTasksParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostProjectProjectIDTasksParamsWithHTTPClient(client *http.Client) *PostProjectProjectIDTasksParams {
	return &PostProjectProjectIDTasksParams{
		HTTPClient: client,
	}
}

/*
PostProjectProjectIDTasksParams contains all the parameters to send to the API endpoint

	for the post project project ID tasks operation.

	Typically these are written to a http.Request.
*/
type PostProjectProjectIDTasksParams struct {

	/* ProjectID.

	   Project ID
	*/
	ProjectID int64

	// Task.
	Task PostProjectProjectIDTasksBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post project project ID tasks params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostProjectProjectIDTasksParams) WithDefaults() *PostProjectProjectIDTasksParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post project project ID tasks params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostProjectProjectIDTasksParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post project project ID tasks params
func (o *PostProjectProjectIDTasksParams) WithTimeout(timeout time.Duration) *PostProjectProjectIDTasksParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post project project ID tasks params
func (o *PostProjectProjectIDTasksParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post project project ID tasks params
func (o *PostProjectProjectIDTasksParams) WithContext(ctx context.Context) *PostProjectProjectIDTasksParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post project project ID tasks params
func (o *PostProjectProjectIDTasksParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post project project ID tasks params
func (o *PostProjectProjectIDTasksParams) WithHTTPClient(client *http.Client) *PostProjectProjectIDTasksParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post project project ID tasks params
func (o *PostProjectProjectIDTasksParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProjectID adds the projectID to the post project project ID tasks params
func (o *PostProjectProjectIDTasksParams) WithProjectID(projectID int64) *PostProjectProjectIDTasksParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the post project project ID tasks params
func (o *PostProjectProjectIDTasksParams) SetProjectID(projectID int64) {
	o.ProjectID = projectID
}

// WithTask adds the task to the post project project ID tasks params
func (o *PostProjectProjectIDTasksParams) WithTask(task PostProjectProjectIDTasksBody) *PostProjectProjectIDTasksParams {
	o.SetTask(task)
	return o
}

// SetTask adds the task to the post project project ID tasks params
func (o *PostProjectProjectIDTasksParams) SetTask(task PostProjectProjectIDTasksBody) {
	o.Task = task
}

// WriteToRequest writes these params to a swagger request
func (o *PostProjectProjectIDTasksParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param project_id
	if err := r.SetPathParam("project_id", swag.FormatInt64(o.ProjectID)); err != nil {
		return err
	}
	if err := r.SetBodyParam(o.Task); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
