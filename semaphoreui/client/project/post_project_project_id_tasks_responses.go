// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"terraform-provider-semaphoreui/semaphoreui/models"
)

// PostProjectProjectIDTasksReader is a Reader for the PostProjectProjectIDTasks structure.
type PostProjectProjectIDTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostProjectProjectIDTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostProjectProjectIDTasksCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[POST /project/{project_id}/tasks] PostProjectProjectIDTasks", response, response.Code())
	}
}

// NewPostProjectProjectIDTasksCreated creates a PostProjectProjectIDTasksCreated with default headers values
func NewPostProjectProjectIDTasksCreated() *PostProjectProjectIDTasksCreated {
	return &PostProjectProjectIDTasksCreated{}
}

/*
PostProjectProjectIDTasksCreated describes a response with status code 201, with default header values.

Task queued
*/
type PostProjectProjectIDTasksCreated struct {
	Payload *models.Task
}

// IsSuccess returns true when this post project project Id tasks created response has a 2xx status code
func (o *PostProjectProjectIDTasksCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post project project Id tasks created response has a 3xx status code
func (o *PostProjectProjectIDTasksCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post project project Id tasks created response has a 4xx status code
func (o *PostProjectProjectIDTasksCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post project project Id tasks created response has a 5xx status code
func (o *PostProjectProjectIDTasksCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post project project Id tasks created response a status code equal to that given
func (o *PostProjectProjectIDTasksCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post project project Id tasks created response
func (o *PostProjectProjectIDTasksCreated) Code() int {
	return 201
}

func (o *PostProjectProjectIDTasksCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /project/{project_id}/tasks][%d] postProjectProjectIdTasksCreated %s", 201, payload)
}

func (o *PostProjectProjectIDTasksCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /project/{project_id}/tasks][%d] postProjectProjectIdTasksCreated %s", 201, payload)
}

func (o *PostProjectProjectIDTasksCreated) GetPayload() *models.Task {
	return o.Payload
}

func (o *PostProjectProjectIDTasksCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
PostProjectProjectIDTasksBody post project project ID tasks body
swagger:model PostProjectProjectIDTasksBody
*/
type PostProjectProjectIDTasksBody struct {

	// debug
	Debug bool `json:"debug,omitempty"`

	// diff
	Diff bool `json:"diff,omitempty"`

	// dry run
	DryRun bool `json:"dry_run,omitempty"`

	// environment
	Environment string `json:"environment,omitempty"`

	// git branch
	GitBranch string `json:"git_branch,omitempty"`

	// limit
	Limit string `json:"limit,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// playbook
	Playbook string `json:"playbook,omitempty"`

	// template id
	TemplateID int64 `json:"template_id,omitempty"`
}

// Validate validates this post project project ID tasks body
func (o *PostProjectProjectIDTasksBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post project project ID tasks body based on context it is used
func (o *PostProjectProjectIDTasksBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostProjectProjectIDTasksBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostProjectProjectIDTasksBody) UnmarshalBinary(b []byte) error {
	var res PostProjectProjectIDTasksBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
