// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostUsersUserIDPasswordReader is a Reader for the PostUsersUserIDPassword structure.
type PostUsersUserIDPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUsersUserIDPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPostUsersUserIDPasswordNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[POST /users/{user_id}/password] PostUsersUserIDPassword", response, response.Code())
	}
}

// NewPostUsersUserIDPasswordNoContent creates a PostUsersUserIDPasswordNoContent with default headers values
func NewPostUsersUserIDPasswordNoContent() *PostUsersUserIDPasswordNoContent {
	return &PostUsersUserIDPasswordNoContent{}
}

/*
PostUsersUserIDPasswordNoContent describes a response with status code 204, with default header values.

Password updated
*/
type PostUsersUserIDPasswordNoContent struct {
}

// IsSuccess returns true when this post users user Id password no content response has a 2xx status code
func (o *PostUsersUserIDPasswordNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post users user Id password no content response has a 3xx status code
func (o *PostUsersUserIDPasswordNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post users user Id password no content response has a 4xx status code
func (o *PostUsersUserIDPasswordNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this post users user Id password no content response has a 5xx status code
func (o *PostUsersUserIDPasswordNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this post users user Id password no content response a status code equal to that given
func (o *PostUsersUserIDPasswordNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the post users user Id password no content response
func (o *PostUsersUserIDPasswordNoContent) Code() int {
	return 204
}

func (o *PostUsersUserIDPasswordNoContent) Error() string {
	return fmt.Sprintf("[POST /users/{user_id}/password][%d] postUsersUserIdPasswordNoContent", 204)
}

func (o *PostUsersUserIDPasswordNoContent) String() string {
	return fmt.Sprintf("[POST /users/{user_id}/password][%d] postUsersUserIdPasswordNoContent", 204)
}

func (o *PostUsersUserIDPasswordNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PostUsersUserIDPasswordBody post users user ID password body
swagger:model PostUsersUserIDPasswordBody
*/
type PostUsersUserIDPasswordBody struct {

	// password
	// Format: password
	Password strfmt.Password `json:"password,omitempty"`
}

// Validate validates this post users user ID password body
func (o *PostUsersUserIDPasswordBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePassword(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostUsersUserIDPasswordBody) validatePassword(formats strfmt.Registry) error {
	if swag.IsZero(o.Password) { // not required
		return nil
	}

	if err := validate.FormatOf("Password"+"."+"password", "body", "password", o.Password.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post users user ID password body based on context it is used
func (o *PostUsersUserIDPasswordBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUsersUserIDPasswordBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUsersUserIDPasswordBody) UnmarshalBinary(b []byte) error {
	var res PostUsersUserIDPasswordBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
