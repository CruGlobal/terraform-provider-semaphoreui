// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// APIToken API token
//
// swagger:model APIToken
type APIToken struct {

	// created
	Created string `json:"created,omitempty"`

	// expired
	Expired bool `json:"expired,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// user id
	// Minimum: 1
	UserID int64 `json:"user_id,omitempty"`
}

// Validate validates this API token
func (m *APIToken) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUserID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIToken) validateUserID(formats strfmt.Registry) error {
	if swag.IsZero(m.UserID) { // not required
		return nil
	}

	if err := validate.MinimumInt("user_id", "body", m.UserID, 1, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this API token based on context it is used
func (m *APIToken) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *APIToken) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIToken) UnmarshalBinary(b []byte) error {
	var res APIToken
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
