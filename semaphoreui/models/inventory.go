// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Inventory inventory
//
// swagger:model Inventory
type Inventory struct {

	// become key id
	BecomeKeyID int64 `json:"become_key_id,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// inventory
	Inventory string `json:"inventory,omitempty"`

	// name
	// Example: Test
	Name string `json:"name,omitempty"`

	// project id
	ProjectID int64 `json:"project_id,omitempty"`

	// ssh key id
	SSHKeyID int64 `json:"ssh_key_id,omitempty"`

	// type
	// Enum: ["static","static-yaml","file","terraform-workspace","tofu-workspace"]
	Type string `json:"type,omitempty"`
}

// Validate validates this inventory
func (m *Inventory) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var inventoryTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["static","static-yaml","file","terraform-workspace","tofu-workspace"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		inventoryTypeTypePropEnum = append(inventoryTypeTypePropEnum, v)
	}
}

const (

	// InventoryTypeStatic captures enum value "static"
	InventoryTypeStatic string = "static"

	// InventoryTypeStaticDashYaml captures enum value "static-yaml"
	InventoryTypeStaticDashYaml string = "static-yaml"

	// InventoryTypeFile captures enum value "file"
	InventoryTypeFile string = "file"

	// InventoryTypeTerraformDashWorkspace captures enum value "terraform-workspace"
	InventoryTypeTerraformDashWorkspace string = "terraform-workspace"

	// InventoryTypeTofuDashWorkspace captures enum value "tofu-workspace"
	InventoryTypeTofuDashWorkspace string = "tofu-workspace"
)

// prop value enum
func (m *Inventory) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, inventoryTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Inventory) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this inventory based on context it is used
func (m *Inventory) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Inventory) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Inventory) UnmarshalBinary(b []byte) error {
	var res Inventory
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
